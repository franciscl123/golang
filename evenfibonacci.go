/*
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
author           : Francis Louis
Program Name     : evenfibonacci.go
created date     : 16-Sep-2024
last modified on : 16-Sep-2024
GitHub Repo      : https://github.com/franciscl123/golang.git
Purpose          : https://projecteuler.net/problem=2    (Solution to this problem)  
                 : Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with  and , the first terms will be:            1,2,3,5,8,13,21,34,55,89
                   By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

package main

import "fmt"


func fibonacci(n int) int {
    if n == 1 || n == 2 {
        return n
        } else {
	return fibonacci(n-1) + fibonacci(n-2)
	}
}

func iseven(n int) int {
return n % 2
}

func main() {
	n := int(4000000)
        var sum int = 0
        var fib int
        for i := 1; i < n; i++ {
        fib = fibonacci(i)
	if iseven(fib)==0 {
          fmt.Println(fib)
          sum = sum + fib
        }
	}
fmt.Println(sum)
}

